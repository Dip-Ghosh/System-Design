services:
  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    volumes:
      - airflow_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AIRFLOW_DB_USER}"]
      interval: 10s
      retries: 5
    networks:
      - appnet

  airflow-webserver:
    image: apache/airflow:2.10.0
    container_name: airflow-webserver
    depends_on:
      - airflow-postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-postgres:5432/${AIRFLOW_DB_NAME}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
      - ../airflow/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      retries: 5
    networks:
      - appnet
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.10.0
    container_name: airflow-scheduler
    depends_on:
      - airflow-postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-postgres:5432/${AIRFLOW_DB_NAME}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
      - ../airflow/plugins:/opt/airflow/plugins
    networks:
      - appnet
    command: scheduler

volumes:
  airflow_pgdata:
